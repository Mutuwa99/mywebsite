name: Deployment

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Deployment"]
    types:
      - completed

jobs:
  manual-approval:
    name: Manual Approval
    runs-on: ubuntu-latest
    if: github.actor == 'mutuwa99' && github.event.workflow_run.conclusion == 'success'
    steps:
      - name: Display Approval Message
        run: |
          echo "Please review and approve or reject this deployment."
          echo "To approve, comment '/approve'."
          echo "To reject, comment '/reject'."

      - name: Wait for Approval
        id: approval
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: comments } = await github.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            });

            const approvalComment = comments.find(comment =>
              comment.user.login === 'mutuwa99' &&
              (comment.body.includes('/approve') || comment.body.includes('/reject'))
            );

            if (approvalComment && approvalComment.body.includes('/approve')) {
              console.log('Approved');
              core.setOutput('approved', 'true');
            } else if (approvalComment && approvalComment.body.includes('/reject')) {
              console.log('Rejected');
              core.setOutput('approved', 'false');
            } else {
              console.log('No decision');
              core.setOutput('approved', 'pending');
            }

  deploy-production:
    name: Deploy to Production Environment
    runs-on: ubuntu-latest
    needs: manual-approval
    if: needs.manual-approval.outputs.approved == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Add necessary steps to build and prepare your application for deployment

      - name: Deploy to Production Environment
        uses: appleboy/ssh-action@v0.5.0
        with:
          host: ${{ secrets.SERVER_IP_ADDRESS }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_PRIVATE_KEY }}
          script: |
            # Change to the appropriate directory on the remote server
            cd /path/to/destination/folder

            # Copy the application files from the GitHub Actions workspace to the remote server
            cp -r $GITHUB_WORKSPACE/* .
